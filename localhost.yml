- hosts: localhost
  connection: local
  gather_facts: 'True'

  vars:
    local_home: "{{ lookup('env','HOME') }}"

    repos_git_user:
      - { src: "https://github.com/lesmyrmidons/dotfiles.git", dest: "~/.setup/dotfile" }
      - { src: "https://github.com/lesmyrmidons/zsh-config.git", dest: "~/.setup/zsh_config" }
      # - { src: "https://github.com/lesmyrmidons/vim-config.git", dest: "~/.setup/vim_config" }

    repos_git_root:
      - { src: "https://github.com/ahmetb/kubectx", dest: "/opt/kubectx"}

    aur_packages:
      - cnijfilter2-mg7700
      - dive
      - google-chrome
      - gotask-taskfile
      - scangearmp2-mg7700
      - teams
      - ulauncher
      - topgrade

    app_image:
      - { name: Lens, src: https://api.k8slens.dev/binaries/latest.x86_64.AppImage, desc: "Lens - The Kubernetes IDE", category: Network }
      - { name: Joplin, src: https://github.com/laurent22/joplin/releases/download/v2.9.17/Joplin-2.9.17.AppImage, desc: "Joplin - Note taking and to-do application", category: Office }
      - { name: CPU-X, src: https://github.com/TheTumultuousUnicornOfDarkness/CPU-X/releases/download/v4.5.2/CPU-X-v4.5.2-x86_64.AppImage, desc: "CPU-X - Gathers information on CPU, motherboard and more", category: "System Tools" }

    pacman_packages:
      - { name: ack }
      - { name: antiword }
      - { name: bash-completion }
      - { name: caprine }
      - { name: code }
      - { name: curl }
      - { name: docker }
      - { name: fuse }
      - { name: git }
      - { name: hddtemp }
      - { name: helm }
      - { name: htop }
      - { name: httpie }
      - { name: hwinfo }
      - { name: i2c-tools }
      - { name: krita }
      - { name: krita-plugin-gmic }
      - { name: kubectl }
#      - { name: kubectx }
      - { name: nvm }
      - { name: nvme-cli }
      - { name: obs-studio }
      - { name: pinta }
      - { name: pwgen }
      - { name: screenfetch }
      - { name: signal-desktop }
      - { name: slack-web-jak, state: absent }
      - { name: snapd }
      - { name: solaar }
      - { name: steam }
      - { name: terminator }
      - { name: tig }
      - { name: timeshift }
#      - { name: timew } # timewarrior
      - { name: tmux }
      - { name: tree }
      - { name: vagrant }
      - { name: vim }
      - { name: virtualbox }
#      - { name: virtualbox-guest-iso }
#      - { name: virtualbox-host-dkms }
#      - { name: linux510-virtualbox-host-modules }
      - { name: yarn }
      - { name: zsh }
      - { name: bitwarden }
      - { name: discord }
      - { name: ledger-live-bin }
      - { name: vlc }

    flatpak_remotes:
      - { name: flathub, url: https://dl.flathub.org/repo/flathub.flatpakrepo }

    flatpak_packages:
      # monitoring Nvidia
    #   - { name: com.leinardi.gwe, state: absent }
    #   - { name: org.gtk.Gtk3theme.Yaru-remix, state: absent }
    #   - { name: org.gtk.Gtk3theme.Yaru-remix-dark, state: absent }
    #   - { name: org.gtk.Gtk3theme.Yaru-remix-light, state: absent }
    #   - { name: com.discordapp.Discord }
      - { name: org.flameshot.Flameshot }
      - { name: com.github.iwalton3.jellyfin-media-player }
      - { name: io.github.jorchube.monitorets }
      - { name: com.hunterwittenborn.Celeste }

    snap_packages:
      - { name: slack, classic: False }
      - { name: postman, classic: False }

    pip_packages:
      - { name: thefuck }
      # Pygments for zsh-syntax-highlighting
      - { name: Pygments }

#    composer_packages:
#      - { name: "hirak/prestissimo" }
#      - { name: "psy/psysh" }

    npm_packages:
#      - { name: "@angular/cli" }
#      - { name: bower }
#      - { name: coffee-script }
#      - { name: hubot }
#      - { name: karma }
#      - { name: "@vue/cli" }
      - { name: localtunnel }
#      - { name: n }
#      - { name: nativefier }
#      - { name: npm-check-updates }
#      - { name: typescript }
#      - { name: typings }

    fonts_url:
      - { url: https://github.com/romkatv/dotfiles-public/raw/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Regular.ttf }
      - { url: https://github.com/romkatv/dotfiles-public/raw/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Bold.ttf }
      - { url: https://github.com/romkatv/dotfiles-public/raw/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Italic.ttf }
      - { url: https://github.com/romkatv/dotfiles-public/raw/master/.local/share/fonts/NerdFonts/MesloLGS%20NF%20Bold%20Italic.ttf }

    link_user:
      - { src: ~/.setup/dotfile/gitconfig, dest: ~/.gitconfig }
      - { src: ~/.setup/dotfile/gitignore_global, dest: ~/.gitignore_global }
      - { src: ~/.setup/dotfile/_ansible.cfg, dest: ~/.ansible.cfg }
      - { src: ~/.setup/dotfile/_config/terminator, dest: ~/.config/terminator }
      - { src: ~/.setup/zsh_config/zshrc, dest: ~/.zshrc }
      - { src: ~/.setup/zsh_config/zsh_aliases, dest: ~/.zsh_aliases }
      - { src: ~/.setup/zsh_config/zsh_plugins.txt, dest: ~/.zsh_plugins.txt }
      - { src: /opt/kubectx/completion/kubectx.zsh, dest: /home/lesmyrmidons/.cache/antidote/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh/completions/_kubectx.zsh }
      - { src: /opt/kubectx/completion/kubens.zsh, dest: /home/lesmyrmidons/.cache/antidote/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh/completions/_kubens.zsh }
      - { src: ~/.setup/dotfile/logos, dest: ~/Picture/logos }

    directories:
      - { src: "{{ local_home }}/.fonts" }
      - { src: "{{ local_home }}/.cache/antidote/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh/completions" }
      - { src: "{{ local_home }}/.kube" }

  handlers:
    - name: run fc-cache
      shell: fc-cache -vf
    - name: sensors
      become: 'True'
      shell: sensors-detect --auto
    - name: snap
      become: 'True'
      shell: systemctl enable --now snapd.socket

  roles:
    - { role: jahrik.yay, install: true }

  tasks:
    - name: Update repositories ArchLinux
      become: 'True'
      community.general.pacman:
        update_cache: 'True'
        upgrade: 'True'
      tags:
        - pacman
        - apps
        - dotfile

    - name: Install packages ArchLinux
      become: 'True'
      package:
        name: "{{ item.name }}"
        state: "{{ item.state|default('present') }}"
      with_items: "{{ pacman_packages }}"
      ignore_errors: 'True'
      notify:
        - sensors
        - snap
      tags:
        - pacman
        - apps
        - dotfile

    # snap store install
    - name: Install snap packages
      become: 'True'
      community.general.snap:
        name: "{{ item.name }}"
        channel: "{{ item.channel|default('latest/stable') }}"
        classic: "{{ item.classic|default('True') }}"
        state: "{{ item.state|default('present') }}"
      with_items: "{{ snap_packages }}"
      ignore_errors: 'True'
      tags:
        - snap
        - apps

    # Flatpak store install
    - name: Add flatpak remote
      community.general.flatpak_remote:
        name: "{{ item.name }}"
        state: "{{ item.state|default('present') }}"
        flatpakrepo_url: "{{ item.url }}"
        method: user
      with_items: "{{ flatpak_remotes }}"
      tags:
        - flatpak
        - apps

    - name: Install flatpak packages
      community.general.flatpak:
        name: "{{ item.name }}"
        state: "{{ item.state|default('present') }}"
        remote: "{{ item.remote|default('flathub') }}"
        method: user
      with_items: "{{ flatpak_packages }}"
      tags:
        - flatpak
        - apps

    # configure zsh
    - name: Change default shell for {{ lookup('env','USER') }}
      become: 'True'
      user:
        name: "{{ lookup('env','USER') }}"
        shell: /bin/zsh
        groups: "{{ lookup('env','USER') }}"
        append: 'True'
      tags:
        - zsh
        - dotfile

    - name: Install kubeseal
      become: 'True'
      get_url:
        url: https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.16.0/kubeseal-linux-amd64
        dest: /usr/local/bin/kubeseal
        mode: '0755'
        owner: root
        group: root
      tags:
        - k8s
        - dotfile

    # install repositories github
    - name: git clone all repositories user
      git:
        repo: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: 'True'
        update: 'True'
        recursive: 'False'
        track_submodules: 'False'
      with_items: "{{ repos_git_user }}"
      tags:
        - zsh
        - dotfile

    - name: Git clone all repositories root
      become: 'True'
      git:
        repo: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: 'True'
      with_items: "{{ repos_git_root }}"
      tags:
        - k8s
        - dotfile

    - name: Install all application of type AppImage
      include_tasks: app_image.yml
      loop: "{{ app_image }}"

    - name: Install apps Python
      pip:
        name: "{{ item.name }}"
        state: "{{ item.state|default('present') }}"
      with_items: "{{ pip_packages }}"
      tags:
        - zsh
        - dotfile

    - name: Create Symlink for git
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: 'True'
        state: link
      with_items: "{{ link_user }}"
      tags:
        - zsh
        - dotfile

    # Create folder for fonts
    - name: Create folder for fonts
      file:
        path: "{{ item.src }}"
        state: directory
        mode: '0755'
        owner: "{{ lookup('env','USER') }}"
        group: "{{ lookup('env','USER') }}"
      with_items: "{{ directories }}"
      tags:
        - zsh
        - dotfile

    # Download fonts
    - name: Download fonts
      get_url:
        url: "{{ item.url }}"
        dest: "{{ local_home }}/.fonts/"
        mode: '0644'
      with_items: "{{ fonts_url }}"
      notify: run fc-cache
      tags:
        - zsh
        - dotfile
